
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<h5 class="mb-4">Site Summary</h5>
<div class="d-flex flex-wrap justify-content-center border-left border-right" style="margin-bottom: 6rem;">
    <div class="card text-white bg-dark  my-3 mx-2" style="max-width: 15rem; max-height: 10rem;">
        <div class="card-header">Shop Balance</div>
        <div class="card-body">
            <h6 class="card-title">Total shop balance to withdraw</h6>
            <p class="card-text badge badge-pill badge-danger" id="AvailableBalanceInAllShops"></p>
        </div>
    </div>

    <div class="card text-white bg-info  my-3 mx-2" style="max-width: 15rem; max-height: 10rem">
        <div class="card-header">Profit</div>
        <div class="card-body">
            <h6 class="card-title">Total comission from sales</h6>
            <p class="card-text badge badge-pill badge-danger" id="totalComission"></p>
        </div>
    </div>

    <div class="card text-white bg-primary  my-3 mx-2" style="max-width: 15rem; max-height: 10rem;">
        <div class="card-header">Seller Withdrawed</div>
        <div class="card-body">
            <h6 class="card-title">Balance withdrawed by shop owner</h6>
            <p class="card-text badge badge-pill badge-danger" id="sellerWithdrawedMoney"></p>
        </div>
    </div>

    <div class="card text-white bg-dark  my-3 mx-2" style="max-width: 15rem; max-height: 10rem;">
        <div class="card-header">Admin Withdrawed</div>
        <div class="card-body">
            <h6 class="card-title">Balance withdrawed by admin</h6>
            <p class="card-text badge badge-pill badge-danger" id="adminWithdrawedMoney"></p>
        </div>
    </div>
</div>



<h5 class="mb-5">Orders in Last Week</h5>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<canvas id="orderChart" width="200" height="50"></canvas>


<script>
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            document.getElementById('adminWithdrawedMoney').innerHTML = JSON.parse(this.responseText) + " $";
        }
    };
    xmlhttp.open("GET", "Admin/GetAdminWithdrawedMoney", true);
    xmlhttp.send();
</script>





<script>
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            document.getElementById('sellerWithdrawedMoney').innerHTML = JSON.parse(this.responseText) + " $";
        }
    };
    xmlhttp.open("GET", "Admin/GetSellerWithdrawedMoney", true);
    xmlhttp.send();
</script>





<script>
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            document.getElementById('AvailableBalanceInAllShops').innerHTML = JSON.parse(this.responseText) + " $";
        }
    };
    xmlhttp.open("GET", "Admin/AvailableBalanceInAllShops", true);
    xmlhttp.send();
</script>





<script>
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            document.getElementById('totalComission').innerHTML = JSON.parse(this.responseText) + " $";
        }
    };
    xmlhttp.open("GET", "Admin/GetTotalComission", true);
    xmlhttp.send();
</script>





<script>
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            var sumTotalInWeek = JSON.parse(this.responseText);

            var days = [];
            const today = new Date()
            const yesterday = new Date(today)
            days.push(today.toDateString());
            for (var i = 1; i < 7; i++) {
                yesterday.setDate(yesterday.getDate() - 1);
                days.push(yesterday.toDateString());
            }

            //chart
            var ctx = document.getElementById('orderChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: days,
                    datasets: [{
                        label: 'Total Amount of Orders in Last Week',
                        data: sumTotalInWeek,
                        backgroundColor: [
                            'rgba(2, 117, 216, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(2, 117, 216, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
            //chart

        }
    };
    xmlhttp.open("GET", "Admin/GetTodaySells", true);
    xmlhttp.send();
</script>


